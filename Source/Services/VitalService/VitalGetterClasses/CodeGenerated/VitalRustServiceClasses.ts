//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

export enum DiskType {
	Unknown = "Unknown",
	HDD = "HDD",
	SSD = "SSD"
}
export interface CpuUsage
{
	cpuPercentage: number;
	cpuTemp: number;
	coreFrequencies: number[];
	corePercentages: number[];
}
export interface Disk
{
	name: string;
	serial?: string;
	letter?: string;
	diskType?: DiskType;
	throughput?: DiskThroughput;
	load?: DiskLoad;
	temperatures?: { [key:string]: number };
	health?: DiskHealth;
}
export interface DiskLoad
{
	usedSpacePercentage?: number;
	usedSpaceBytes?: number;
	totalFreeSpaceBytes?: number;
	writeActivityPercentage?: number;
	totalActivityPercentage?: number;
}
export interface DiskThroughput
{
	readRateBytesPerSecond?: number;
	writeRateBytesPerSecond?: number;
}
export interface DiskHealth
{
	totalBytesRead?: number;
	totalBytesWritten?: number;
}
export interface GpuUsage
{
	name: string;
	corePercentage: number;
	corePowerWatt: number;
	coreClockMhz: number;
	memPercentage: number;
	memTotalKB: number;
	memClockMhz: number;
	pciThroughputSendKBs: number;
	pciThroughputRecieveKBs: number;
}
export interface MemUsage
{
	memPercentage: number;
	memUsedKB: number;
	memTotalKB: number;
	swapPercentage: number;
	swapUsedKB: number;
	swapTotalKB: number;
}
export interface NetworkAdapterUsage
{
	properties: NetworkAdapterProperties;
	utilisation?: NetworkAdapterUtil;
}
export interface NetworkAdapterProperties
{
	name: string;
	description?: string;
	macAddress: string;
	speedBps?: number;
	connectionType?: string;
	iPv4Address?: string[];
	iPv6Address?: string[];
	dnsSuffix?: string;
}
export interface NetworkAdapterUtil
{
	sendBps: number;
	recieveBps: number;
}
export interface PidProcessTitleMapping
{
	id: number;
	title: string;
}
export interface ProcessData
{
	pid: number;
	parentPid?: number;
	executablePath?: string;
	description?: string;
	mainWindowTitle?: string;
	name: string;
	timeStamp: Date;
	cpuPercentage: number;
	memoryKb: number;
	diskUsage: ProcessDiskUsage;
	status?: string;
	gpuUtil?: ProcessGpuUtil;
}
export interface ProcessDiskUsage
{
	readBytesPerSecond: number;
	writeBytesPerSecond: number;
}
export interface ProcessGpuUtil
{
	gpuCorePercentage?: number;
	gpuMemPercentage?: number;
	gpuEncodingPercentage?: number;
	gpuDecodingPercentage?: number;
}
export interface SendUtilizationRequest
{
	processData: ProcessData[];
	systemUsage: SystemUsage;
}
export interface SystemUsage
{
	cpuUsage: CpuUsage;
	memUsage: MemUsage;
	networkAdapterUsage: NetworkAdapterUsage[];
	disk: { [key:string]: Disk };
}
