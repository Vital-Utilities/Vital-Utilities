/*
 * VitalService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GpuUsages {
    #[serde(rename = "temperatureReadings", skip_serializing_if = "Option::is_none")]
    pub temperature_readings: Option<::std::collections::HashMap<String, f32>>,
    #[serde(rename = "totalMemoryBytes", skip_serializing_if = "Option::is_none")]
    pub total_memory_bytes: Option<f32>,
    #[serde(rename = "memoryUsedBytes", skip_serializing_if = "Option::is_none")]
    pub memory_used_bytes: Option<f32>,
    #[serde(rename = "memoryClockMhz", skip_serializing_if = "Option::is_none")]
    pub memory_clock_mhz: Option<f32>,
    #[serde(rename = "shaderClockMhz", skip_serializing_if = "Option::is_none")]
    pub shader_clock_mhz: Option<f32>,
    #[serde(rename = "coreClockMhz", skip_serializing_if = "Option::is_none")]
    pub core_clock_mhz: Option<f32>,
    #[serde(rename = "fanPercentage", skip_serializing_if = "Option::is_none")]
    pub fan_percentage: Option<::std::collections::HashMap<String, f32>>,
    #[serde(rename = "powerDraw", skip_serializing_if = "Option::is_none")]
    pub power_draw: Option<f32>,
    #[serde(rename = "load", skip_serializing_if = "Option::is_none")]
    pub load: Option<Box<crate::models::LoadData>>,
    #[serde(rename = "pcIe_Throughput", skip_serializing_if = "Option::is_none")]
    pub pc_ie_throughput: Option<Box<crate::models::PcieThroughPut>>,
}

impl GpuUsages {
    pub fn new() -> GpuUsages {
        GpuUsages {
            temperature_readings: None,
            total_memory_bytes: None,
            memory_used_bytes: None,
            memory_clock_mhz: None,
            shader_clock_mhz: None,
            core_clock_mhz: None,
            fan_percentage: None,
            power_draw: None,
            load: None,
            pc_ie_throughput: None,
        }
    }
}


