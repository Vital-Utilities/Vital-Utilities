/*
 * VitalService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DiskUsage {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "serial", skip_serializing_if = "Option::is_none")]
    pub serial: Option<String>,
    #[serde(rename = "uniqueIdentifier", skip_serializing_if = "Option::is_none")]
    pub unique_identifier: Option<String>,
    #[serde(rename = "driveType", skip_serializing_if = "Option::is_none")]
    pub drive_type: Option<crate::models::DriveType>,
    #[serde(rename = "throughput", skip_serializing_if = "Option::is_none")]
    pub throughput: Option<Box<crate::models::Throughput>>,
    #[serde(rename = "load", skip_serializing_if = "Option::is_none")]
    pub load: Option<Box<crate::models::Load>>,
    #[serde(rename = "temperatures", skip_serializing_if = "Option::is_none")]
    pub temperatures: Option<::std::collections::HashMap<String, f32>>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Box<crate::models::Data>>,
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    #[serde(rename = "letter", skip_serializing_if = "Option::is_none")]
    pub letter: Option<String>,
}

impl DiskUsage {
    pub fn new() -> DiskUsage {
        DiskUsage {
            name: None,
            serial: None,
            unique_identifier: None,
            drive_type: None,
            throughput: None,
            load: None,
            temperatures: None,
            data: None,
            label: None,
            letter: None,
        }
    }
}


