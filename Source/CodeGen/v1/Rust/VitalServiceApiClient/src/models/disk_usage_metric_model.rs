/*
 * VitalService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct DiskUsageMetricModel {
    #[serde(rename = "serial", skip_serializing_if = "Option::is_none")]
    pub serial: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "driveLetter", skip_serializing_if = "Option::is_none")]
    pub drive_letter: Option<String>,
    #[serde(rename = "usedSpacePercentage", skip_serializing_if = "Option::is_none")]
    pub used_space_percentage: Option<f32>,
    #[serde(rename = "usedSpaceBytes", skip_serializing_if = "Option::is_none")]
    pub used_space_bytes: Option<i64>,
    #[serde(rename = "writeActivityPercentage", skip_serializing_if = "Option::is_none")]
    pub write_activity_percentage: Option<f32>,
    #[serde(rename = "totalActivityPercentage", skip_serializing_if = "Option::is_none")]
    pub total_activity_percentage: Option<f32>,
    #[serde(rename = "readRateBytesPerSecond", skip_serializing_if = "Option::is_none")]
    pub read_rate_bytes_per_second: Option<f64>,
    #[serde(rename = "writeRateBytesPerSecond", skip_serializing_if = "Option::is_none")]
    pub write_rate_bytes_per_second: Option<f64>,
    #[serde(rename = "dataReadBytes", skip_serializing_if = "Option::is_none")]
    pub data_read_bytes: Option<f64>,
    #[serde(rename = "dataWrittenBytes", skip_serializing_if = "Option::is_none")]
    pub data_written_bytes: Option<f64>,
    #[serde(rename = "temperatures", skip_serializing_if = "Option::is_none")]
    pub temperatures: Option<::std::collections::HashMap<String, f32>>,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "uniqueIdentifier", skip_serializing_if = "Option::is_none")]
    pub unique_identifier: Option<String>,
}

impl DiskUsageMetricModel {
    pub fn new(id: i32) -> DiskUsageMetricModel {
        DiskUsageMetricModel {
            serial: None,
            name: None,
            drive_letter: None,
            used_space_percentage: None,
            used_space_bytes: None,
            write_activity_percentage: None,
            total_activity_percentage: None,
            read_rate_bytes_per_second: None,
            write_rate_bytes_per_second: None,
            data_read_bytes: None,
            data_written_bytes: None,
            temperatures: None,
            id,
            unique_identifier: None,
        }
    }
}


