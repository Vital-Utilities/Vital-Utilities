/*
 * VitalService
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CpuUsageMetricModel {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "uniqueIdentifier")]
    pub unique_identifier: Option<String>,
    #[serde(rename = "totalCoreUsagePercentage")]
    pub total_core_usage_percentage: Option<f32>,
    #[serde(rename = "packageTemperature")]
    pub package_temperature: Option<f32>,
    #[serde(rename = "powerDrawWattage")]
    pub power_draw_wattage: Option<f32>,
    #[serde(rename = "coreClocksMhz")]
    pub core_clocks_mhz: Option<::std::collections::HashMap<String, f32>>,
    #[serde(rename = "coresUsagePercentage")]
    pub cores_usage_percentage: Option<::std::collections::HashMap<String, f32>>,
}

impl CpuUsageMetricModel {
    pub fn new(id: i32, unique_identifier: Option<String>, total_core_usage_percentage: Option<f32>, package_temperature: Option<f32>, power_draw_wattage: Option<f32>, core_clocks_mhz: Option<::std::collections::HashMap<String, f32>>, cores_usage_percentage: Option<::std::collections::HashMap<String, f32>>) -> CpuUsageMetricModel {
        CpuUsageMetricModel {
            id,
            unique_identifier,
            total_core_usage_percentage,
            package_temperature,
            power_draw_wattage,
            core_clocks_mhz,
            cores_usage_percentage,
        }
    }
}


