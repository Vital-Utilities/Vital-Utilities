/* tslint:disable */
/* eslint-disable */
/**
 * VitalService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AddProccessRequest,
  CreateProfileRequest,
  ProfileDto,
  UpdateManagedRequest,
  UpdateProfileRequest,
} from '../models';
import {
    AddProccessRequestFromJSON,
    AddProccessRequestToJSON,
    CreateProfileRequestFromJSON,
    CreateProfileRequestToJSON,
    ProfileDtoFromJSON,
    ProfileDtoToJSON,
    UpdateManagedRequestFromJSON,
    UpdateManagedRequestToJSON,
    UpdateProfileRequestFromJSON,
    UpdateProfileRequestToJSON,
} from '../models';

export interface ApiProfileIdDeleteRequest {
    id: number;
}

export interface ApiProfileIdGetRequest {
    id: number;
}

export interface ApiProfilePostRequest {
    createProfileRequest?: CreateProfileRequest;
}

export interface ApiProfileProcessIdDeleteRequest {
    id: number;
}

export interface ApiProfileProcessPostRequest {
    addProccessRequest?: AddProccessRequest;
}

export interface ApiProfileProcessPutRequest {
    updateManagedRequest?: UpdateManagedRequest;
}

export interface ApiProfilePutRequest {
    updateProfileRequest?: UpdateProfileRequest;
}

/**
 * 
 */
export class ProfileApi extends runtime.BaseAPI {

    /**
     */
    async apiProfileGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ProfileDto>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Profile`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ProfileDtoFromJSON));
    }

    /**
     */
    async apiProfileGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ProfileDto>> {
        const response = await this.apiProfileGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiProfileIdDeleteRaw(requestParameters: ApiProfileIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiProfileIdDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Profile/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiProfileIdDelete(requestParameters: ApiProfileIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiProfileIdDeleteRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiProfileIdGetRaw(requestParameters: ApiProfileIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProfileDto>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiProfileIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Profile/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProfileDtoFromJSON(jsonValue));
    }

    /**
     */
    async apiProfileIdGet(requestParameters: ApiProfileIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProfileDto> {
        const response = await this.apiProfileIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiProfilePostRaw(requestParameters: ApiProfilePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProfileDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Profile`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateProfileRequestToJSON(requestParameters.createProfileRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProfileDtoFromJSON(jsonValue));
    }

    /**
     */
    async apiProfilePost(requestParameters: ApiProfilePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProfileDto> {
        const response = await this.apiProfilePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiProfileProcessIdDeleteRaw(requestParameters: ApiProfileProcessIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiProfileProcessIdDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Profile/process/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiProfileProcessIdDelete(requestParameters: ApiProfileProcessIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiProfileProcessIdDeleteRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiProfileProcessPostRaw(requestParameters: ApiProfileProcessPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Profile/process`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AddProccessRequestToJSON(requestParameters.addProccessRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiProfileProcessPost(requestParameters: ApiProfileProcessPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiProfileProcessPostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiProfileProcessPutRaw(requestParameters: ApiProfileProcessPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Profile/process`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateManagedRequestToJSON(requestParameters.updateManagedRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiProfileProcessPut(requestParameters: ApiProfileProcessPutRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiProfileProcessPutRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiProfilePutRaw(requestParameters: ApiProfilePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Profile`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateProfileRequestToJSON(requestParameters.updateProfileRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiProfilePut(requestParameters: ApiProfilePutRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiProfilePutRaw(requestParameters, initOverrides);
    }

}
