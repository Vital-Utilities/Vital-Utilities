/* tslint:disable */
/* eslint-disable */
/**
 * VitalService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InfluxDbSettings
 */
export interface InfluxDbSettings {
    /**
     * 
     * @type {boolean}
     * @memberof InfluxDbSettings
     */
    enabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof InfluxDbSettings
     */
    reportIntervalSeconds?: number;
    /**
     * 
     * @type {string}
     * @memberof InfluxDbSettings
     */
    endPoint?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InfluxDbSettings
     */
    token?: string | null;
}

/**
 * Check if a given object implements the InfluxDbSettings interface.
 */
export function instanceOfInfluxDbSettings(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InfluxDbSettingsFromJSON(json: any): InfluxDbSettings {
    return InfluxDbSettingsFromJSONTyped(json, false);
}

export function InfluxDbSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): InfluxDbSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'reportIntervalSeconds': !exists(json, 'reportIntervalSeconds') ? undefined : json['reportIntervalSeconds'],
        'endPoint': !exists(json, 'endPoint') ? undefined : json['endPoint'],
        'token': !exists(json, 'token') ? undefined : json['token'],
    };
}

export function InfluxDbSettingsToJSON(value?: InfluxDbSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabled': value.enabled,
        'reportIntervalSeconds': value.reportIntervalSeconds,
        'endPoint': value.endPoint,
        'token': value.token,
    };
}

