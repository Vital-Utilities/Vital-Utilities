/* tslint:disable */
/* eslint-disable */
/**
 * VitalService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IPInterfaceProperties } from './IPInterfaceProperties';
import {
    IPInterfacePropertiesFromJSON,
    IPInterfacePropertiesFromJSONTyped,
    IPInterfacePropertiesToJSON,
} from './IPInterfaceProperties';

/**
 * 
 * @export
 * @interface Properties
 */
export interface Properties {
    /**
     * 
     * @type {IPInterfaceProperties}
     * @memberof Properties
     */
    ipInterfaceProperties?: IPInterfaceProperties;
    /**
     * 
     * @type {string}
     * @memberof Properties
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Properties
     */
    description: string | null;
    /**
     * 
     * @type {string}
     * @memberof Properties
     */
    macAddress: string;
    /**
     * 
     * @type {number}
     * @memberof Properties
     */
    speedBps: number;
    /**
     * 
     * @type {string}
     * @memberof Properties
     */
    connectionType: string;
}

/**
 * Check if a given object implements the Properties interface.
 */
export function instanceOfProperties(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "macAddress" in value;
    isInstance = isInstance && "speedBps" in value;
    isInstance = isInstance && "connectionType" in value;

    return isInstance;
}

export function PropertiesFromJSON(json: any): Properties {
    return PropertiesFromJSONTyped(json, false);
}

export function PropertiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Properties {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ipInterfaceProperties': !exists(json, 'ipInterfaceProperties') ? undefined : IPInterfacePropertiesFromJSON(json['ipInterfaceProperties']),
        'name': json['name'],
        'description': json['description'],
        'macAddress': json['macAddress'],
        'speedBps': json['speedBps'],
        'connectionType': json['connectionType'],
    };
}

export function PropertiesToJSON(value?: Properties | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ipInterfaceProperties': IPInterfacePropertiesToJSON(value.ipInterfaceProperties),
        'name': value.name,
        'description': value.description,
        'macAddress': value.macAddress,
        'speedBps': value.speedBps,
        'connectionType': value.connectionType,
    };
}

