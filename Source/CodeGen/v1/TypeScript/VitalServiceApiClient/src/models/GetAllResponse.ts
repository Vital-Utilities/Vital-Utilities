/* tslint:disable */
/* eslint-disable */
/**
 * VitalService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ManagedModelDto } from './ManagedModelDto';
import {
    ManagedModelDtoFromJSON,
    ManagedModelDtoFromJSONTyped,
    ManagedModelDtoToJSON,
} from './ManagedModelDto';
import type { ProcessToAddDto } from './ProcessToAddDto';
import {
    ProcessToAddDtoFromJSON,
    ProcessToAddDtoFromJSONTyped,
    ProcessToAddDtoToJSON,
} from './ProcessToAddDto';

/**
 * 
 * @export
 * @interface GetAllResponse
 */
export interface GetAllResponse {
    /**
     * 
     * @type {Array<ManagedModelDto>}
     * @memberof GetAllResponse
     */
    managedModels?: Array<ManagedModelDto>;
    /**
     * 
     * @type {Array<ProcessToAddDto>}
     * @memberof GetAllResponse
     */
    processesToAdd?: Array<ProcessToAddDto>;
}

/**
 * Check if a given object implements the GetAllResponse interface.
 */
export function instanceOfGetAllResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetAllResponseFromJSON(json: any): GetAllResponse {
    return GetAllResponseFromJSONTyped(json, false);
}

export function GetAllResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAllResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'managedModels': !exists(json, 'managedModels') ? undefined : ((json['managedModels'] as Array<any>).map(ManagedModelDtoFromJSON)),
        'processesToAdd': !exists(json, 'processesToAdd') ? undefined : ((json['processesToAdd'] as Array<any>).map(ProcessToAddDtoFromJSON)),
    };
}

export function GetAllResponseToJSON(value?: GetAllResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'managedModels': value.managedModels === undefined ? undefined : ((value.managedModels as Array<any>).map(ManagedModelDtoToJSON)),
        'processesToAdd': value.processesToAdd === undefined ? undefined : ((value.processesToAdd as Array<any>).map(ProcessToAddDtoToJSON)),
    };
}

