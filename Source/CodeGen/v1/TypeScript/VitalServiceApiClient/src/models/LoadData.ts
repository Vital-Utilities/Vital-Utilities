/* tslint:disable */
/* eslint-disable */
/**
 * VitalService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LoadData
 */
export interface LoadData {
    /**
     * 
     * @type {number}
     * @memberof LoadData
     */
    core: number | null;
    /**
     * 
     * @type {number}
     * @memberof LoadData
     */
    frameBuffer: number | null;
    /**
     * 
     * @type {number}
     * @memberof LoadData
     */
    videoEngine: number | null;
    /**
     * 
     * @type {number}
     * @memberof LoadData
     */
    busInterface: number | null;
    /**
     * 
     * @type {number}
     * @memberof LoadData
     */
    memory: number | null;
    /**
     * 
     * @type {number}
     * @memberof LoadData
     */
    memoryController: number | null;
    /**
     * 
     * @type {number}
     * @memberof LoadData
     */
    cuda: number | null;
    /**
     * 
     * @type {number}
     * @memberof LoadData
     */
    threeD: number | null;
}

/**
 * Check if a given object implements the LoadData interface.
 */
export function instanceOfLoadData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "core" in value;
    isInstance = isInstance && "frameBuffer" in value;
    isInstance = isInstance && "videoEngine" in value;
    isInstance = isInstance && "busInterface" in value;
    isInstance = isInstance && "memory" in value;
    isInstance = isInstance && "memoryController" in value;
    isInstance = isInstance && "cuda" in value;
    isInstance = isInstance && "threeD" in value;

    return isInstance;
}

export function LoadDataFromJSON(json: any): LoadData {
    return LoadDataFromJSONTyped(json, false);
}

export function LoadDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoadData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'core': json['core'],
        'frameBuffer': json['frameBuffer'],
        'videoEngine': json['videoEngine'],
        'busInterface': json['busInterface'],
        'memory': json['memory'],
        'memoryController': json['memoryController'],
        'cuda': json['cuda'],
        'threeD': json['threeD'],
    };
}

export function LoadDataToJSON(value?: LoadData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'core': value.core,
        'frameBuffer': value.frameBuffer,
        'videoEngine': value.videoEngine,
        'busInterface': value.busInterface,
        'memory': value.memory,
        'memoryController': value.memoryController,
        'cuda': value.cuda,
        'threeD': value.threeD,
    };
}

