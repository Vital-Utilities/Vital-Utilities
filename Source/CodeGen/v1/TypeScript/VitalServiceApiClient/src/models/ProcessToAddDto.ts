/* tslint:disable */
/* eslint-disable */
/**
 * VitalService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProcessPriorityEnum } from './ProcessPriorityEnum';
import {
    ProcessPriorityEnumFromJSON,
    ProcessPriorityEnumFromJSONTyped,
    ProcessPriorityEnumToJSON,
} from './ProcessPriorityEnum';

/**
 * 
 * @export
 * @interface ProcessToAddDto
 */
export interface ProcessToAddDto {
    /**
     * 
     * @type {number}
     * @memberof ProcessToAddDto
     */
    pid: number;
    /**
     * 
     * @type {string}
     * @memberof ProcessToAddDto
     */
    processName: string;
    /**
     * 
     * @type {string}
     * @memberof ProcessToAddDto
     */
    mainWindowTitle: string;
    /**
     * 
     * @type {string}
     * @memberof ProcessToAddDto
     */
    executionPath?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ProcessToAddDto
     */
    canModify: boolean;
    /**
     * 
     * @type {Array<number>}
     * @memberof ProcessToAddDto
     */
    affinity: Array<number>;
    /**
     * 
     * @type {ProcessPriorityEnum}
     * @memberof ProcessToAddDto
     */
    processPriority: ProcessPriorityEnum;
}

/**
 * Check if a given object implements the ProcessToAddDto interface.
 */
export function instanceOfProcessToAddDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pid" in value;
    isInstance = isInstance && "processName" in value;
    isInstance = isInstance && "mainWindowTitle" in value;
    isInstance = isInstance && "canModify" in value;
    isInstance = isInstance && "affinity" in value;
    isInstance = isInstance && "processPriority" in value;

    return isInstance;
}

export function ProcessToAddDtoFromJSON(json: any): ProcessToAddDto {
    return ProcessToAddDtoFromJSONTyped(json, false);
}

export function ProcessToAddDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProcessToAddDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pid': json['pid'],
        'processName': json['processName'],
        'mainWindowTitle': json['mainWindowTitle'],
        'executionPath': !exists(json, 'executionPath') ? undefined : json['executionPath'],
        'canModify': json['canModify'],
        'affinity': json['affinity'],
        'processPriority': ProcessPriorityEnumFromJSON(json['processPriority']),
    };
}

export function ProcessToAddDtoToJSON(value?: ProcessToAddDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pid': value.pid,
        'processName': value.processName,
        'mainWindowTitle': value.mainWindowTitle,
        'executionPath': value.executionPath,
        'canModify': value.canModify,
        'affinity': value.affinity,
        'processPriority': ProcessPriorityEnumToJSON(value.processPriority),
    };
}

