/* tslint:disable */
/* eslint-disable */
/**
 * VitalService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NetworkAdapterProperties } from './NetworkAdapterProperties';
import {
    NetworkAdapterPropertiesFromJSON,
    NetworkAdapterPropertiesFromJSONTyped,
    NetworkAdapterPropertiesToJSON,
} from './NetworkAdapterProperties';
import type { NetworkAdapterUtil } from './NetworkAdapterUtil';
import {
    NetworkAdapterUtilFromJSON,
    NetworkAdapterUtilFromJSONTyped,
    NetworkAdapterUtilToJSON,
} from './NetworkAdapterUtil';

/**
 * 
 * @export
 * @interface NetworkAdapterUsage
 */
export interface NetworkAdapterUsage {
    /**
     * 
     * @type {NetworkAdapterProperties}
     * @memberof NetworkAdapterUsage
     */
    properties?: NetworkAdapterProperties;
    /**
     * 
     * @type {NetworkAdapterUtil}
     * @memberof NetworkAdapterUsage
     */
    utilisation?: NetworkAdapterUtil;
}

/**
 * Check if a given object implements the NetworkAdapterUsage interface.
 */
export function instanceOfNetworkAdapterUsage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NetworkAdapterUsageFromJSON(json: any): NetworkAdapterUsage {
    return NetworkAdapterUsageFromJSONTyped(json, false);
}

export function NetworkAdapterUsageFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkAdapterUsage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'properties': !exists(json, 'properties') ? undefined : NetworkAdapterPropertiesFromJSON(json['properties']),
        'utilisation': !exists(json, 'utilisation') ? undefined : NetworkAdapterUtilFromJSON(json['utilisation']),
    };
}

export function NetworkAdapterUsageToJSON(value?: NetworkAdapterUsage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'properties': NetworkAdapterPropertiesToJSON(value.properties),
        'utilisation': NetworkAdapterUtilToJSON(value.utilisation),
    };
}

