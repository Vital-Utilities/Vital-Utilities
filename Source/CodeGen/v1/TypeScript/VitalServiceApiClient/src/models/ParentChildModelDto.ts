/* tslint:disable */
/* eslint-disable */
/**
 * VitalService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProcessViewDto } from './ProcessViewDto';
import {
    ProcessViewDtoFromJSON,
    ProcessViewDtoFromJSONTyped,
    ProcessViewDtoToJSON,
} from './ProcessViewDto';

/**
 * 
 * @export
 * @interface ParentChildModelDto
 */
export interface ParentChildModelDto {
    /**
     * 
     * @type {ProcessViewDto}
     * @memberof ParentChildModelDto
     */
    parent?: ProcessViewDto;
    /**
     * 
     * @type {Set<ProcessViewDto>}
     * @memberof ParentChildModelDto
     */
    children?: Set<ProcessViewDto>;
}

/**
 * Check if a given object implements the ParentChildModelDto interface.
 */
export function instanceOfParentChildModelDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ParentChildModelDtoFromJSON(json: any): ParentChildModelDto {
    return ParentChildModelDtoFromJSONTyped(json, false);
}

export function ParentChildModelDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ParentChildModelDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'parent': !exists(json, 'parent') ? undefined : ProcessViewDtoFromJSON(json['parent']),
        'children': !exists(json, 'children') ? undefined : (new Set((json['children'] as Array<any>).map(ProcessViewDtoFromJSON))),
    };
}

export function ParentChildModelDtoToJSON(value?: ParentChildModelDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'parent': ProcessViewDtoToJSON(value.parent),
        'children': value.children === undefined ? undefined : (Array.from(value.children as Set<any>).map(ProcessViewDtoToJSON)),
    };
}

