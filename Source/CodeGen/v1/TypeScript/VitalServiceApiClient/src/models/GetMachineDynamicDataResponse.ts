/* tslint:disable */
/* eslint-disable */
/**
 * VitalService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CpuUsages } from './CpuUsages';
import {
    CpuUsagesFromJSON,
    CpuUsagesFromJSONTyped,
    CpuUsagesToJSON,
} from './CpuUsages';
import type { DiskUsages } from './DiskUsages';
import {
    DiskUsagesFromJSON,
    DiskUsagesFromJSONTyped,
    DiskUsagesToJSON,
} from './DiskUsages';
import type { GpuUsages } from './GpuUsages';
import {
    GpuUsagesFromJSON,
    GpuUsagesFromJSONTyped,
    GpuUsagesToJSON,
} from './GpuUsages';
import type { NetworkAdapters } from './NetworkAdapters';
import {
    NetworkAdaptersFromJSON,
    NetworkAdaptersFromJSONTyped,
    NetworkAdaptersToJSON,
} from './NetworkAdapters';
import type { RamUsages } from './RamUsages';
import {
    RamUsagesFromJSON,
    RamUsagesFromJSONTyped,
    RamUsagesToJSON,
} from './RamUsages';

/**
 * 
 * @export
 * @interface GetMachineDynamicDataResponse
 */
export interface GetMachineDynamicDataResponse {
    /**
     * 
     * @type {CpuUsages}
     * @memberof GetMachineDynamicDataResponse
     */
    cpuUsageData: CpuUsages;
    /**
     * 
     * @type {RamUsages}
     * @memberof GetMachineDynamicDataResponse
     */
    ramUsagesData: RamUsages;
    /**
     * 
     * @type {Array<GpuUsages>}
     * @memberof GetMachineDynamicDataResponse
     */
    gpuUsageData: Array<GpuUsages> | null;
    /**
     * 
     * @type {DiskUsages}
     * @memberof GetMachineDynamicDataResponse
     */
    diskUsages: DiskUsages;
    /**
     * 
     * @type {NetworkAdapters}
     * @memberof GetMachineDynamicDataResponse
     */
    networkUsageData: NetworkAdapters;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof GetMachineDynamicDataResponse
     */
    processCpuUsage: { [key: string]: number; } | null;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof GetMachineDynamicDataResponse
     */
    processCpuThreadsUsage: { [key: string]: number; } | null;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof GetMachineDynamicDataResponse
     */
    processThreadCount: { [key: string]: number; } | null;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof GetMachineDynamicDataResponse
     */
    processRamUsageGb: { [key: string]: number; } | null;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof GetMachineDynamicDataResponse
     */
    processDiskBytesPerSecActivity: { [key: string]: number; } | null;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof GetMachineDynamicDataResponse
     */
    cpuTemperature: { [key: string]: number; } | null;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof GetMachineDynamicDataResponse
     */
    processGpuUsage: { [key: string]: number; } | null;
}

/**
 * Check if a given object implements the GetMachineDynamicDataResponse interface.
 */
export function instanceOfGetMachineDynamicDataResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "cpuUsageData" in value;
    isInstance = isInstance && "ramUsagesData" in value;
    isInstance = isInstance && "gpuUsageData" in value;
    isInstance = isInstance && "diskUsages" in value;
    isInstance = isInstance && "networkUsageData" in value;
    isInstance = isInstance && "processCpuUsage" in value;
    isInstance = isInstance && "processCpuThreadsUsage" in value;
    isInstance = isInstance && "processThreadCount" in value;
    isInstance = isInstance && "processRamUsageGb" in value;
    isInstance = isInstance && "processDiskBytesPerSecActivity" in value;
    isInstance = isInstance && "cpuTemperature" in value;
    isInstance = isInstance && "processGpuUsage" in value;

    return isInstance;
}

export function GetMachineDynamicDataResponseFromJSON(json: any): GetMachineDynamicDataResponse {
    return GetMachineDynamicDataResponseFromJSONTyped(json, false);
}

export function GetMachineDynamicDataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetMachineDynamicDataResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cpuUsageData': CpuUsagesFromJSON(json['cpuUsageData']),
        'ramUsagesData': RamUsagesFromJSON(json['ramUsagesData']),
        'gpuUsageData': (json['gpuUsageData'] === null ? null : (json['gpuUsageData'] as Array<any>).map(GpuUsagesFromJSON)),
        'diskUsages': DiskUsagesFromJSON(json['diskUsages']),
        'networkUsageData': NetworkAdaptersFromJSON(json['networkUsageData']),
        'processCpuUsage': json['processCpuUsage'],
        'processCpuThreadsUsage': json['processCpuThreadsUsage'],
        'processThreadCount': json['processThreadCount'],
        'processRamUsageGb': json['processRamUsageGb'],
        'processDiskBytesPerSecActivity': json['processDiskBytesPerSecActivity'],
        'cpuTemperature': json['cpuTemperature'],
        'processGpuUsage': json['processGpuUsage'],
    };
}

export function GetMachineDynamicDataResponseToJSON(value?: GetMachineDynamicDataResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cpuUsageData': CpuUsagesToJSON(value.cpuUsageData),
        'ramUsagesData': RamUsagesToJSON(value.ramUsagesData),
        'gpuUsageData': (value.gpuUsageData === null ? null : (value.gpuUsageData as Array<any>).map(GpuUsagesToJSON)),
        'diskUsages': DiskUsagesToJSON(value.diskUsages),
        'networkUsageData': NetworkAdaptersToJSON(value.networkUsageData),
        'processCpuUsage': value.processCpuUsage,
        'processCpuThreadsUsage': value.processCpuThreadsUsage,
        'processThreadCount': value.processThreadCount,
        'processRamUsageGb': value.processRamUsageGb,
        'processDiskBytesPerSecActivity': value.processDiskBytesPerSecActivity,
        'cpuTemperature': value.cpuTemperature,
        'processGpuUsage': value.processGpuUsage,
    };
}

