/* tslint:disable */
/* eslint-disable */
/**
 * VitalService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NetAdapterUsage } from './NetAdapterUsage';
import {
    NetAdapterUsageFromJSON,
    NetAdapterUsageFromJSONTyped,
    NetAdapterUsageToJSON,
} from './NetAdapterUsage';
import type { Properties } from './Properties';
import {
    PropertiesFromJSON,
    PropertiesFromJSONTyped,
    PropertiesToJSON,
} from './Properties';

/**
 * 
 * @export
 * @interface NetworkAdapter
 */
export interface NetworkAdapter {
    /**
     * 
     * @type {NetAdapterUsage}
     * @memberof NetworkAdapter
     */
    usage?: NetAdapterUsage;
    /**
     * 
     * @type {Properties}
     * @memberof NetworkAdapter
     */
    properties?: Properties;
}

/**
 * Check if a given object implements the NetworkAdapter interface.
 */
export function instanceOfNetworkAdapter(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NetworkAdapterFromJSON(json: any): NetworkAdapter {
    return NetworkAdapterFromJSONTyped(json, false);
}

export function NetworkAdapterFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkAdapter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'usage': !exists(json, 'usage') ? undefined : NetAdapterUsageFromJSON(json['usage']),
        'properties': !exists(json, 'properties') ? undefined : PropertiesFromJSON(json['properties']),
    };
}

export function NetworkAdapterToJSON(value?: NetworkAdapter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'usage': NetAdapterUsageToJSON(value.usage),
        'properties': PropertiesToJSON(value.properties),
    };
}

