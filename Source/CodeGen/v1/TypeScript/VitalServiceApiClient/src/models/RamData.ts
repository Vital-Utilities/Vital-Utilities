/* tslint:disable */
/* eslint-disable */
/**
 * VitalService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RamData
 */
export interface RamData {
    /**
     * 
     * @type {string}
     * @memberof RamData
     */
    name: string | null;
    /**
     * 
     * @type {string}
     * @memberof RamData
     */
    partNumber: string | null;
    /**
     * 
     * @type {string}
     * @memberof RamData
     */
    type: string | null;
    /**
     * 
     * @type {number}
     * @memberof RamData
     */
    speedMhz: number | null;
    /**
     * 
     * @type {number}
     * @memberof RamData
     */
    slotNumber: number | null;
    /**
     * 
     * @type {string}
     * @memberof RamData
     */
    slotChannel: string | null;
    /**
     * 
     * @type {number}
     * @memberof RamData
     */
    configuredClockSpeedMhz: number | null;
    /**
     * 
     * @type {number}
     * @memberof RamData
     */
    capacity: number | null;
}

/**
 * Check if a given object implements the RamData interface.
 */
export function instanceOfRamData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "partNumber" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "speedMhz" in value;
    isInstance = isInstance && "slotNumber" in value;
    isInstance = isInstance && "slotChannel" in value;
    isInstance = isInstance && "configuredClockSpeedMhz" in value;
    isInstance = isInstance && "capacity" in value;

    return isInstance;
}

export function RamDataFromJSON(json: any): RamData {
    return RamDataFromJSONTyped(json, false);
}

export function RamDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): RamData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'partNumber': json['partNumber'],
        'type': json['type'],
        'speedMhz': json['speedMhz'],
        'slotNumber': json['slotNumber'],
        'slotChannel': json['slotChannel'],
        'configuredClockSpeedMhz': json['configuredClockSpeedMhz'],
        'capacity': json['capacity'],
    };
}

export function RamDataToJSON(value?: RamData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'partNumber': value.partNumber,
        'type': value.type,
        'speedMhz': value.speedMhz,
        'slotNumber': value.slotNumber,
        'slotChannel': value.slotChannel,
        'configuredClockSpeedMhz': value.configuredClockSpeedMhz,
        'capacity': value.capacity,
    };
}

