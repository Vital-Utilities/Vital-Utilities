/* tslint:disable */
/* eslint-disable */
/**
 * VitalService
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DriveType } from './DriveType';
import {
    DriveTypeFromJSON,
    DriveTypeFromJSONTyped,
    DriveTypeToJSON,
} from './DriveType';
import type { HardwareMetricModel } from './HardwareMetricModel';
import {
    HardwareMetricModelFromJSON,
    HardwareMetricModelFromJSONTyped,
    HardwareMetricModelToJSON,
} from './HardwareMetricModel';

/**
 * 
 * @export
 * @interface DiskUsageMetricModel
 */
export interface DiskUsageMetricModel {
    /**
     * 
     * @type {string}
     * @memberof DiskUsageMetricModel
     */
    serial?: string;
    /**
     * 
     * @type {string}
     * @memberof DiskUsageMetricModel
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof DiskUsageMetricModel
     */
    driveLetter?: string;
    /**
     * 
     * @type {DriveType}
     * @memberof DiskUsageMetricModel
     */
    driveType?: DriveType;
    /**
     * 
     * @type {number}
     * @memberof DiskUsageMetricModel
     */
    usedSpacePercentage?: number;
    /**
     * 
     * @type {number}
     * @memberof DiskUsageMetricModel
     */
    usedSpaceBytes?: number;
    /**
     * 
     * @type {number}
     * @memberof DiskUsageMetricModel
     */
    writeActivityPercentage?: number;
    /**
     * 
     * @type {number}
     * @memberof DiskUsageMetricModel
     */
    totalActivityPercentage?: number;
    /**
     * 
     * @type {number}
     * @memberof DiskUsageMetricModel
     */
    readRateBytesPerSecond?: number;
    /**
     * 
     * @type {number}
     * @memberof DiskUsageMetricModel
     */
    writeRateBytesPerSecond?: number;
    /**
     * 
     * @type {number}
     * @memberof DiskUsageMetricModel
     */
    dataReadBytes?: number;
    /**
     * 
     * @type {number}
     * @memberof DiskUsageMetricModel
     */
    dataWrittenBytes?: number;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof DiskUsageMetricModel
     */
    temperatures?: { [key: string]: number; };
    /**
     * 
     * @type {number}
     * @memberof DiskUsageMetricModel
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof DiskUsageMetricModel
     */
    uniqueIdentifier?: string;
}

/**
 * Check if a given object implements the DiskUsageMetricModel interface.
 */
export function instanceOfDiskUsageMetricModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function DiskUsageMetricModelFromJSON(json: any): DiskUsageMetricModel {
    return DiskUsageMetricModelFromJSONTyped(json, false);
}

export function DiskUsageMetricModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiskUsageMetricModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'serial': !exists(json, 'serial') ? undefined : json['serial'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'driveLetter': !exists(json, 'driveLetter') ? undefined : json['driveLetter'],
        'driveType': !exists(json, 'driveType') ? undefined : DriveTypeFromJSON(json['driveType']),
        'usedSpacePercentage': !exists(json, 'usedSpacePercentage') ? undefined : json['usedSpacePercentage'],
        'usedSpaceBytes': !exists(json, 'usedSpaceBytes') ? undefined : json['usedSpaceBytes'],
        'writeActivityPercentage': !exists(json, 'writeActivityPercentage') ? undefined : json['writeActivityPercentage'],
        'totalActivityPercentage': !exists(json, 'totalActivityPercentage') ? undefined : json['totalActivityPercentage'],
        'readRateBytesPerSecond': !exists(json, 'readRateBytesPerSecond') ? undefined : json['readRateBytesPerSecond'],
        'writeRateBytesPerSecond': !exists(json, 'writeRateBytesPerSecond') ? undefined : json['writeRateBytesPerSecond'],
        'dataReadBytes': !exists(json, 'dataReadBytes') ? undefined : json['dataReadBytes'],
        'dataWrittenBytes': !exists(json, 'dataWrittenBytes') ? undefined : json['dataWrittenBytes'],
        'temperatures': !exists(json, 'temperatures') ? undefined : json['temperatures'],
        'id': json['id'],
        'uniqueIdentifier': !exists(json, 'uniqueIdentifier') ? undefined : json['uniqueIdentifier'],
    };
}

export function DiskUsageMetricModelToJSON(value?: DiskUsageMetricModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'serial': value.serial,
        'name': value.name,
        'driveLetter': value.driveLetter,
        'driveType': DriveTypeToJSON(value.driveType),
        'usedSpacePercentage': value.usedSpacePercentage,
        'usedSpaceBytes': value.usedSpaceBytes,
        'writeActivityPercentage': value.writeActivityPercentage,
        'totalActivityPercentage': value.totalActivityPercentage,
        'readRateBytesPerSecond': value.readRateBytesPerSecond,
        'writeRateBytesPerSecond': value.writeRateBytesPerSecond,
        'dataReadBytes': value.dataReadBytes,
        'dataWrittenBytes': value.dataWrittenBytes,
        'temperatures': value.temperatures,
        'id': value.id,
        'uniqueIdentifier': value.uniqueIdentifier,
    };
}

