# This is a basic workflow that is manually triggered

name: Publish and Sign

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: true
        default: ""
env:
  CARGO_TERM_COLOR: always
  SENTRYIO_BACKEND_DSN: ${{ secrets.SENTRYIO_BACKEND_DSN }}
  SENTRYIO_REACT_DSN: ${{ secrets.SENTRYIO_REACT_DSN }}
  SENTRYIO_RUST_DSN: ${{ secrets.SENTRYIO_RUST_DSN }}
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-release:
    # The type of runner that the job will run on
    runs-on: windows-latest
    environment: production
    env: 
      TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
        include-prerelease: false
    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Cargo Cache
      uses: actions/cache@v3
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
          ${{ runner.os }}-cargo
    - name: Cargo Target Cache
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
          ${{ runner.os }}-cargo-target
    - name: modify version
      run: |
        cd "./Source"
        echo ${{ github.event.inputs.version }} > Version.txt
    - name: version bump
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ./Source/Version.txt
        git commit -m "Update Version" -a
    - name: Cache pnpm modules
      uses: actions/cache@v3
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-
    - uses: pnpm/action-setup@v2.2.1
      with:
        version: 7.5.0
        run_install: false
    - name: install ts-node
      run: |
        cd "./Source"
        pnpm i -g ts-node
        pnpm i -D @types/node
    - name: Build release
      run: |
        cd "./Source"
        pnpm run build:release
    - name: Release
      uses: softprops/action-gh-release@v1
      with: 
        draft: true
        generate_release_notes: true
        fail_on_unmatched_files: true
        tag_name: ${{ github.event.inputs.version }}
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          ./Source/ClientApp/src-tauri/target/release/bundle/msi/*.msi
          './Source/ClientApp/src-tauri/target/release/bundle/msi/*.msi.zip'
          './Source/ClientApp/src-tauri/target/release/bundle/msi/*.msi.zip.sig'
